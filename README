Hello world!
Bryan Salicco
UCF Student
New to Get Hub
How are you?

GITHUB HELP!
I am going to explain what I have learned thus far:

Create a repository after downloading git hub and making username:
Follow directions from website (easy step)
Make sure to have SSH key added
Dont forget your passphrase!!

Common commands:
cd --change directory to which you want to work with.
notepad README --open file named 'README' in notepad to make changes
	**need to find out how to open other editors 

git add README --adds changes made which are in red to file README and will be green to show
	changes have been made

git add commit -m "first commit" --tracks changes under given message "first commit" as to understand
	why certain changes were made or different stages of progress(essentially a label for commit)

git push origin master --pushes the changes made to the repository from local computer to github site

git pull origin master --getting files from github for local manipulation


git status --shows the status of any changes you've made in repository to file
	in red --files that have not been added to file
	in green --files that have been recognized and added
	commit in order to save

git log --gives history of work done by author and date of work done
	keeps track of users for large project

git reflog --basically same as git log but no author or date

git show --shows lasts updates

git k --GUI interface to track changes of files, very useful tool for seeing changes,dates, authors etc.

git checkout README --Made a change and have not committed yet, then the file will go back to previous version
	good tool if you find code that doesn't work

git commit -am "Code that doesn't work" --will add the code and put message of "code that.."
	will save a step so next step to add to repository is just
	git push (instead of git push origin master)

git clone git@github.com:undergraduatestudies.......etc. --follow SSH code for link to cloning repository 
	into local computer. From there you can access files in directory such as 'HelloWorld'

git config color.vi true --set colors in git bash so that text isn't one color.
	makes it easier to see changes

git mergetool --if there is a merge conflict. tool in which you will see the latest push and local push
	where merge conflict happened. Should have pulled before a push to get latest code from 
	remote(github) location

rm <filename> --will remove filename


flags:
-m --message
-h --shows options(used with git show or git log)
-am --add and message of change(allows next step to be simpley git push instead of longer version)

